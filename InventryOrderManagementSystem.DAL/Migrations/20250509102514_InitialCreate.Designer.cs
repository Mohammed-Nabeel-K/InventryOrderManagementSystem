// <auto-generated />
using System;
using InventryOrderManagementSystem.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventryOrderManagementSystem.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250509102514_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InventryOrderManagementSystem.DAL.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("InventryOrderManagementSystem.DAL.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotelAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("InventryOrderManagementSystem.DAL.Models.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("InventryOrderManagementSystem.DAL.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.Property<string>("ReorderLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("InventryOrderManagementSystem.DAL.Models.StockMovement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Change")
                        .HasColumnType("int");

                    b.Property<Guid>("PerformedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timstamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PerformedBy");

                    b.HasIndex("ProductId");

                    b.ToTable("StockMovements");
                });

            modelBuilder.Entity("InventryOrderManagementSystem.DAL.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHashed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_User_Email");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("34d0a13e-b225-4ae0-9903-95fcf73cd051"),
                            CreatedAt = new DateTime(2025, 5, 9, 14, 22, 41, 820, DateTimeKind.Local),
                            Email = "admin@inv.com",
                            IsActive = false,
                            LastUpdatedAt = new DateTime(2025, 5, 9, 14, 22, 41, 820, DateTimeKind.Local),
                            Name = "Admin",
                            PasswordHashed = "$2a$11$IPysT70RC9hzmhMCwCcuVOVYpQ1TrfL4nv5KjAE3sFF3IMxOxLJa2",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = new Guid("6bef721a-3010-45d6-b7b9-0508951eb776"),
                            CreatedAt = new DateTime(2025, 5, 9, 14, 22, 41, 820, DateTimeKind.Local),
                            Email = "manager@inv.com",
                            IsActive = false,
                            LastUpdatedAt = new DateTime(2025, 5, 9, 14, 22, 41, 820, DateTimeKind.Local),
                            Name = "Manager",
                            PasswordHashed = "$2a$11$m3yCb45fte8Uxe5.idqR4uimJ25RqRAkwGKRNay2m0tUXZe27aFAW",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = new Guid("7d415d48-cda3-4231-9b2b-625af21af39f"),
                            CreatedAt = new DateTime(2025, 5, 9, 14, 22, 41, 820, DateTimeKind.Local),
                            Email = "sales@inv.com",
                            IsActive = false,
                            LastUpdatedAt = new DateTime(2025, 5, 9, 14, 22, 41, 820, DateTimeKind.Local),
                            Name = "Sales",
                            PasswordHashed = "$2a$11$gBVtVNCSb1za7roFSqiBFul4Cbkbf0l130cC/2Pfr.aJonQ.h6ICy",
                            Role = "Sales"
                        });
                });

            modelBuilder.Entity("InventryOrderManagementSystem.DAL.Models.Order", b =>
                {
                    b.HasOne("InventryOrderManagementSystem.DAL.Models.User", "CreatedByUser")
                        .WithMany("Orders")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventryOrderManagementSystem.DAL.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("InventryOrderManagementSystem.DAL.Models.OrderItem", b =>
                {
                    b.HasOne("InventryOrderManagementSystem.DAL.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventryOrderManagementSystem.DAL.Models.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("InventryOrderManagementSystem.DAL.Models.StockMovement", b =>
                {
                    b.HasOne("InventryOrderManagementSystem.DAL.Models.User", "PerformedByUser")
                        .WithMany("StockMovements")
                        .HasForeignKey("PerformedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventryOrderManagementSystem.DAL.Models.Product", "Product")
                        .WithMany("StockMovements")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PerformedByUser");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("InventryOrderManagementSystem.DAL.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("InventryOrderManagementSystem.DAL.Models.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("InventryOrderManagementSystem.DAL.Models.Product", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("StockMovements");
                });

            modelBuilder.Entity("InventryOrderManagementSystem.DAL.Models.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("StockMovements");
                });
#pragma warning restore 612, 618
        }
    }
}
